const mongoose = require('mongoose');
const Machine = require('./models/Machine'); // Adjust the path to where your Machine model is defined

const sampleMachines = [
    {
        machine_name: "Siemens Somatom",
        machine_code: "CT001",
        serial_no: "SN0001",
        vault_approval_no: "VA0001",
        vault_approval_date: new Date("2022-03-15"),
        vault_approval_document: Buffer.from("ExampleDocument1"),
        license_number: "LIC0001",
        license_document: Buffer.from("ExampleLicense1"),
        license_validity: new Date("2025-03-15"),
        first_clinic_approval_date: new Date("2023-03-15"),
        clinic_approval_from: new Date("2023-03-15"),
        clinic_approval_to: new Date("2024-03-15"),
        uptime_weekdays: 160,
        uptime_saturday: 150,
        contract_from: new Date("2023-01-01"),
        contract_to: new Date("2026-01-01"),
        hospital_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d1b"),
        treatment_type_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d1c"),
        machine_type_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d1d"),
        machine_protocol_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d1e"),
        preventive_maintenance_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d1f"),
        photon_ff_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d20"),
        photon_fff_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d21"),
        electron_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d22"),
        brachy_source_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d23"),
        machine_model_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d24")
    },
    {
        machine_name: "GE Discovery",
        machine_code: "PET001",
        serial_no: "SN0002",
        vault_approval_no: "VA0002",
        vault_approval_date: new Date("2022-05-10"),
        vault_approval_document: Buffer.from("ExampleDocument2"),
        license_number: "LIC0002",
        license_document: Buffer.from("ExampleLicense2"),
        license_validity: new Date("2025-05-10"),
        first_clinic_approval_date: new Date("2023-05-10"),
        clinic_approval_from: new Date("2023-05-10"),
        clinic_approval_to: new Date("2024-05-10"),
        uptime_weekdays: 150,
        uptime_saturday: 140,
        contract_from: new Date("2023-01-01"),
        contract_to: new Date("2026-01-01"),
        hospital_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d25"),
        treatment_type_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d26"),
        machine_type_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d27"),
        machine_protocol_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d28"),
        preventive_maintenance_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d29"),
        photon_ff_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d2a"),
        photon_fff_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d2b"),
        electron_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d2c"),
        brachy_source_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d2d"),
        machine_model_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d2e")
    },
    {
        machine_name: "Philips Ingenia",
        machine_code: "MRI001",
        serial_no: "SN0003",
        vault_approval_no: "VA0003",
        vault_approval_date: new Date("2022-07-20"),
        vault_approval_document: Buffer.from("ExampleDocument3"),
        license_number: "LIC0003",
        license_document: Buffer.from("ExampleLicense3"),
        license_validity: new Date("2025-07-20"),
        first_clinic_approval_date: new Date("2023-07-20"),
        clinic_approval_from: new Date("2023-07-20"),
        clinic_approval_to: new Date("2024-07-20"),
        uptime_weekdays: 165,
        uptime_saturday: 155,
        contract_from: new Date("2023-01-01"),
        contract_to: new Date("2026-01-01"),
        hospital_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d2f"),
        treatment_type_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d30"),
        machine_type_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d31"),
        machine_protocol_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d32"),
        preventive_maintenance_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d33"),
        photon_ff_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d34"),
        photon_fff_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d35"),
        electron_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d36"),
        brachy_source_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d37"),
        machine_model_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d38")
    },
    {
        machine_name: "Varian TrueBeam",
        machine_code: "LIN001",
        serial_no: "SN0004",
        vault_approval_no: "VA0004",
        vault_approval_date: new Date("2022-09-05"),
        vault_approval_document: Buffer.from("ExampleDocument4"),
        license_number: "LIC0004",
        license_document: Buffer.from("ExampleLicense4"),
        license_validity: new Date("2025-09-05"),
        first_clinic_approval_date: new Date("2023-09-05"),
        clinic_approval_from: new Date("2023-09-05"),
        clinic_approval_to: new Date("2024-09-05"),
        uptime_weekdays: 155,
        uptime_saturday: 145,
        contract_from: new Date("2023-01-01"),
        contract_to: new Date("2026-01-01"),
        hospital_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d39"),
        treatment_type_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d3a"),
        machine_type_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d3b"),
        machine_protocol_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d3c"),
        preventive_maintenance_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d3d"),
        photon_ff_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d3e"),
        photon_fff_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d3f"),
        electron_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d40"),
        brachy_source_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d41"),
        machine_model_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d42")
    },
    {
        machine_name: "Hitachi SCENARIA",
        machine_code: "CT002",
        serial_no: "SN0005",
        vault_approval_no: "VA0005",
        vault_approval_date: new Date("2022-11-15"),
        vault_approval_document: Buffer.from("ExampleDocument5"),
        license_number: "LIC0005",
        license_document: Buffer.from("ExampleLicense5"),
        license_validity: new Date("2025-11-15"),
        first_clinic_approval_date: new Date("2023-11-15"),
        clinic_approval_from: new Date("2023-11-15"),
        clinic_approval_to: new Date("2024-11-15"),
        uptime_weekdays: 140,
        uptime_saturday: 130,
        contract_from: new Date("2023-01-01"),
        contract_to: new Date("2026-01-01"),
        hospital_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d43"),
        treatment_type_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d44"),
        machine_type_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d45"),
        machine_protocol_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d46"),
        preventive_maintenance_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d47"),
        photon_ff_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d48"),
        photon_fff_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d49"),
        electron_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d4a"),
        brachy_source_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d4b"),
        machine_model_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d4c")
    },
    {
        machine_name: "Canon Aquilion",
        machine_code: "CT003",
        serial_no: "SN0006",
        vault_approval_no: "VA0006",
        vault_approval_date: new Date("2023-01-25"),
        vault_approval_document: Buffer.from("ExampleDocument6"),
        license_number: "LIC0006",
        license_document: Buffer.from("ExampleLicense6"),
        license_validity: new Date("2026-01-25"),
        first_clinic_approval_date: new Date("2024-01-25"),
        clinic_approval_from: new Date("2024-01-25"),
        clinic_approval_to: new Date("2025-01-25"),
        uptime_weekdays: 160,
        uptime_saturday: 150,
        contract_from: new Date("2023-01-01"),
        contract_to: new Date("2026-01-01"),
        hospital_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d4d"),
        treatment_type_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d4e"),
        machine_type_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d4f"),
        machine_protocol_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d50"),
        preventive_maintenance_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d51"),
        photon_ff_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d52"),
        photon_fff_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d53"),
        electron_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d54"),
        brachy_source_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d55"),
        machine_model_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d56")
    },
    {
        machine_name: "Siemens MAGNETOM",
        machine_code: "MRI002",
        serial_no: "SN0007",
        vault_approval_no: "VA0007",
        vault_approval_date: new Date("2023-04-10"),
        vault_approval_document: Buffer.from("ExampleDocument7"),
        license_number: "LIC0007",
        license_document: Buffer.from("ExampleLicense7"),
        license_validity: new Date("2026-04-10"),
        first_clinic_approval_date: new Date("2024-04-10"),
        clinic_approval_from: new Date("2024-04-10"),
        clinic_approval_to: new Date("2025-04-10"),
        uptime_weekdays: 170,
        uptime_saturday: 160,
        contract_from: new Date("2023-01-01"),
        contract_to: new Date("2026-01-01"),
        hospital_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d57"),
        treatment_type_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d58"),
        machine_type_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d59"),
        machine_protocol_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d5a"),
        preventive_maintenance_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d5b"),
        photon_ff_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d5c"),
        photon_fff_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d5d"),
        electron_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d5e"),
        brachy_source_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d5f"),
        machine_model_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d60")
    },
    {
        machine_name: "GE Signa",
        machine_code: "MRI003",
        serial_no: "SN0008",
        vault_approval_no: "VA0008",
        vault_approval_date: new Date("2023-06-15"),
        vault_approval_document: Buffer.from("ExampleDocument8"),
        license_number: "LIC0008",
        license_document: Buffer.from("ExampleLicense8"),
        license_validity: new Date("2026-06-15"),
        first_clinic_approval_date: new Date("2024-06-15"),
        clinic_approval_from: new Date("2024-06-15"),
        clinic_approval_to: new Date("2025-06-15"),
        uptime_weekdays: 165,
        uptime_saturday: 155,
        contract_from: new Date("2023-01-01"),
        contract_to: new Date("2026-01-01"),
        hospital_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d61"),
        treatment_type_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d62"),
        machine_type_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d63"),
        machine_protocol_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d64"),
        preventive_maintenance_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d65"),
        photon_ff_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d66"),
        photon_fff_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d67"),
        electron_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d68"),
        brachy_source_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d69"),
        machine_model_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d6a")
    },
    {
        machine_name: "Canon Vantage",
        machine_code: "MRI004",
        serial_no: "SN0009",
        vault_approval_no: "VA0009",
        vault_approval_date: new Date("2023-08-20"),
        vault_approval_document: Buffer.from("ExampleDocument9"),
        license_number: "LIC0009",
        license_document: Buffer.from("ExampleLicense9"),
        license_validity: new Date("2026-08-20"),
        first_clinic_approval_date: new Date("2024-08-20"),
        clinic_approval_from: new Date("2024-08-20"),
        clinic_approval_to: new Date("2025-08-20"),
        uptime_weekdays: 160,
        uptime_saturday: 150,
        contract_from: new Date("2023-01-01"),
        contract_to: new Date("2026-01-01"),
        hospital_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d6b"),
        treatment_type_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d6c"),
        machine_type_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d6d"),
        machine_protocol_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d6e"),
        preventive_maintenance_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d6f"),
        photon_ff_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d70"),
        photon_fff_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d71"),
        electron_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d72"),
        brachy_source_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d73"),
        machine_model_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d74")
    },
    {
        machine_name: "Elekta Versa",
        machine_code: "LIN002",
        serial_no: "SN0010",
        vault_approval_no: "VA0010",
        vault_approval_date: new Date("2023-10-05"),
        vault_approval_document: Buffer.from("ExampleDocument10"),
        license_number: "LIC0010",
        license_document: Buffer.from("ExampleLicense10"),
        license_validity: new Date("2026-10-05"),
        first_clinic_approval_date: new Date("2024-10-05"),
        clinic_approval_from: new Date("2024-10-05"),
        clinic_approval_to: new Date("2025-10-05"),
        uptime_weekdays: 170,
        uptime_saturday: 160,
        contract_from: new Date("2023-01-01"),
        contract_to: new Date("2026-01-01"),
        hospital_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d75"),
        treatment_type_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d76"),
        machine_type_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d77"),
        machine_protocol_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d78"),
        preventive_maintenance_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d79"),
        photon_ff_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d7a"),
        photon_fff_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d7b"),
        electron_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d7c"),
        brachy_source_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d7d"),
        machine_model_id: mongoose.Types.ObjectId("60c72b2f5f1b2c001c8e4d7e")
    }
];

// Function to insert the sample machines into the database
const insertSampleMachines = async () => {
    try {
        await Machine.insertMany(sampleMachines);
        console.log("Sample machines inserted successfully!");
    } catch (error) {
        console.error("Error inserting sample machines:", error);
    }
};

// Connect to MongoDB and insert the sample machines
mongoose.connect('mongodb+srv://workspacemvsi:3fmr4tSsivTHor4I@cluster06.569xw8k.mongodb.net/test', { useNewUrlParser: true, useUnifiedTopology: true })
    .then(() => {
        console.log("Connected to MongoDB");
        insertSampleMachines();
    })
    .catch(error => {
        console.error("Error connecting to MongoDB:", error);
    });
